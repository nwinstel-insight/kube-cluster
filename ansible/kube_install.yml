---
- hosts: all
  become: yes
  tasks:

  - name: Upgrade all system packages
    ansible.builtin.apt:
      upgrade: full
      update_cache: true

  - name: Package installation
    apt:
      name:
        - apt-transport-https
        - arptables
        - ca-certificates
        - containerd
        - curl
        - ebtables
        - firewalld
        - gdisk
        - hdparm
        - htop
        - iputils-ping
        - ipvsadm
        - lvm2
        - net-tools
        - nfs-common
        - nvme-cli
        - open-iscsi
        - psmisc
        - smartmontools
        - software-properties-common
        - unattended-upgrades
        - unzip
        - wireguard
      state: latest
      update_cache: true

  - name: Restart node if necessary
    ansible.builtin.meta: flush_handlers

  - name: Enable kernel modules runtime
    community.general.modprobe:
      name: "{{ item }}"
      state: present
    loop:
      - br_netfilter
      - overlay
      - rbd

  - name: Enable kernel modules on boot
    ansible.builtin.copy:
      mode: 0644
      content: "{{ item }}"
      dest: "/etc/modules-load.d/{{ item }}.conf"
    loop:
      - br_netfilter
      - overlay
      - rbd

  - name: Update /etc/hosts to include hostname
    ansible.builtin.blockinfile:
      path: /etc/hosts
      create: true
      block: |
        127.0.0.1 localhost
        127.0.1.1 {{ inventory_hostname }}
        192.168.3.9 k8s-api
        # The following lines are desirable for IPv6 capable hosts
        ::1 ip6-localhost ip6-loopback
        fe00::0 ip6-localnet
        ff00::0 ip6-mcastprefix
        ff02::1 ip6-allnodes
        ff02::2 ip6-allrouters
        ff02::3 ip6-allhosts

  - name: Set system controls for Kubernetes
    ansible.posix.sysctl:
      name: "{{ item.key }}"
      value: "{{ item.value }}"
      sysctl_file: /etc/sysctl.d/99-kubernetes.conf
      reload: true
    with_dict: "{{ sysctl_config }}"
    vars:
      sysctl_config:
        net.ipv4.ip_forward: 1
        net.ipv4.conf.all.forwarding: 1
        net.ipv6.conf.all.forwarding: 1
        net.bridge.bridge-nf-call-iptables: 1
        net.bridge.bridge-nf-call-ip6tables: 1
        net.ipv4.conf.default.rp_filter: 0
        net.ipv4.conf.all.rp_filter: 0

  - name: Update max_user_watches
    ansible.posix.sysctl:
      name: fs.inotify.max_user_watches
      value: "65536"
      state: present
      sysctl_file: /etc/sysctl.d/98-kubernetes-fs.conf

  - name: Disable swap at runtime
    ansible.builtin.command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - name: Disable swap on boot
    ansible.posix.mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    loop:
      - swap
      - none

  - name: install APT Transport HTTPS
    apt:
      name: apt-transport-https
      state: present

  - name: Update apt repo and cache on all Debian/Ubuntu boxes
    apt: update_cache=yes force_apt_get=yes cache_valid_time=3600

  - name: add Kubernetes apt-key
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      validate_certs: false
      state: present

  - name: add Kubernetes' APT repository
    apt_repository:
      repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: 'kubernetes'

  - name: install kubelet
    apt:
      name: kubelet=1.22.6-00
      state: present
      force: True
      update_cache: true

  - name: install kubeadm
    apt:
      name: kubeadm=1.22.6-00
      state: present
      force: True

  - name: install kubectl
    apt:
      name: kubectl=1.22.6-00
      force: True

  - name: Hold kube stuffs
    dpkg_selections:
      name: kubectl
      name: kubelet
      name: kubeadm
      selection: hold

  - name: Stop and disable firewalld.
    service:
     name: firewalld
     state: stopped
     enabled: False
