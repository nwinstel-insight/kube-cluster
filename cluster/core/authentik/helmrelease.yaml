---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: authentik
  namespace: security
spec:
  dependsOn:
    - name: longhorn
      namespace: longhorn-system
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://charts.goauthentik.io
      chart: authentik
      version: 2022.4.1
      sourceRef:
        kind: HelmRepository
        name: authentik-charts
        namespace: flux-system
      interval: 5m

  values:

    image:
      repository: ghcr.io/goauthentik/server
      tag: 2022.1.5

    ingress:
      enabled: true
      ingressClassName: "nginx"
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        kubernetes.io/tls-acme: "true"
        external-dns/is-public: "true"
      hosts:
        - host: id.${SECRET_DOMAIN}
          paths:
            - path: /
      tls:
        - secretName: tls.authentik
          hosts:
            - id.${SECRET_DOMAIN}

    geoip:
      enabled: false

    authentik:
      email:
        host: smtp.gmail.com
        port: 465
        username: ${SECRET_EMAIL}
        password: "${SECRET_AUTHELIA_SMTP_PASSWORD}"
        use_ssl: true
        from: id@${SECRET_DOMAIN}
      secret_key: ${AUTHENTIK_KEY}
      log_level: debug

      outposts:
        docker_image_base: ghcr.io/goauthentik/%(type)s:%(version)s

      postgresql:
        host: '{{ .Release.Name }}-postgresql'
        name: authentik
        user: authentik
        password: ${SECRET_AUTHENTIK_POSTGRES_PASSWORD}
      redis:
        host: '{{ .Release.Name }}-redis-master'
        password: ${SECRET_AUTHENTIK_REDIS_PASSWORD}

    postgresql:
      enabled: true
      persistence:
        enabled: true

      postgresqlUsername: authentik
      postgresqlDatabase: authentik
      postgresqlPassword: ${SECRET_AUTHENTIK_POSTGRES_PASSWORD}

    redis:
      enabled: true
      auth:
        enabled: true
        password: ${SECRET_AUTHENTIK_REDIS_PASSWORD}
